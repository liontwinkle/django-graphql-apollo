version: 2.1

aliases:
  - &npm-install |
    npm install

  - &restore-npm-cache
    keys:
      - npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - npm-{{ .Branch }}-

  - &save-npm-cache
    paths:
      - node_modules
    key: npm-{{ .Branch }}-{{ checksum "package-lock.json" }}

executors:
  default_executor:
    docker:
      - image: circleci/node:8

  python_executor:
    machine:
      docker_layer_caching: true

jobs:
  npm-install:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: *npm-install
      - save_cache: *save-npm-cache

  jest:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: npm run jest

  eslint:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: npm run eslint

  prettier:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: npm run prettier:check

  audit:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: npm audit

  build:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: npm run build

  storybook:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run: npm run build-storybook

  pytest-and-lint:
    executor: python_executor
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Containers
          command: |
            ./docker-assist build
      - run:
          name: Start containers, run tests and lint
          command: |
            ./docker-assist start -d
            ./docker-assist test && ./docker-assist lint

workflows:
  version: 2
  frontend:
    jobs:
      - npm-install
      - jest:
          requires:
            - npm-install
      - eslint:
          requires:
            - npm-install
      - prettier:
          requires:
            - npm-install
      - audit:
          requires:
            - npm-install
      - build:
          requires:
            - npm-install
      - storybook:
          requires:
            - npm-install
  backend:
    jobs:
      - pytest-and-lint
